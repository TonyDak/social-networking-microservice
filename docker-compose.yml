version: '3.8'
services:
  # MySQL for User Service
  mysql:
    image: mysql:latest
    container_name: social-network-mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - social-network

  # MongoDB for Post, Media, Notification, and Chat Services
  mongodb:
    image: mongo:latest
    container_name: social-network-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - social-network

  # Redis for Caching
  redis:
    image: redis:latest
    container_name: social-network-redis
    ports:
      - "6379:6379"
    networks:
      - social-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: social-network-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - social-network

  # Kafka for Message Queue
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: social-network-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - social-network

  # Keycloak for Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: social-network-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - mysql
    networks:
      - social-network

  # MinIO for Object Storage (for Media Service)
  minio:
    image: minio/minio
    container_name: social-network-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - social-network

networks:
  social-network:
    driver: bridge

volumes:
  mysql-data:
  mongodb-data:
  minio-data: